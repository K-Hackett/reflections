What happens when you initialize a repository? Why do you need to do it?

When you initialize a git repository it creates a .git file in that directory. You need to do it so you can start tracking the history of that directory.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The working directory is just the directory you're currently in. The repository is the .git working directory w/ history information, etc. The staging area I guess is where you go to make the commits.

How can you use the staging area to make sure you have one commit per logical change?

Maybe you can double check it's differences against the most recent commit. If it's not a full logical change you can go back and edit until you're happy with the last change you've made.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When testing out different ideas vs your main one. Every logical commit should go towards perfecting your project but if you have a sepearate idea it's good to make a separate branch to see how they work in comparison and then you can easily switch back.

How do the diagrams help you visualize the branch structure?

They help you follow the branches with better understanding. You can easily see what will be lost and where each branch leads to.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is a branch that includes the log history of the merged branches. All removals from both branches will be removed in the merged branch and all additions from both will be there in the merged branch.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

When it comes to automatic merging it can't read logic so say you have the same function in different places it'll come up as a conflict. Where if you're merging manually you must take out everything and add everything on your own which is time consuming.